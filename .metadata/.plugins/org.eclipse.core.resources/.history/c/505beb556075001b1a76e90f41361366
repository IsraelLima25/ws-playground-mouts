package com.dev.lima.resources;

import java.net.URI;
import java.util.List;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import com.dev.lima.dtos.PersonDTO;
import com.dev.lima.services.PersonService;

@RestController
@RequestMapping("/persons")
public class PersonResource {
	
	@Autowired
	private PersonService personService;
	
	@PostMapping
	public ResponseEntity<PersonDTO> save(@RequestBody PersonDTO personDTO,
			HttpServletResponse response){

		PersonDTO personSave = personService.savePerson(personDTO);
		
		URI uri = ServletUriComponentsBuilder.fromCurrentRequest().path("/{id}")
				.buildAndExpand(personSave.getCpf()).toUri();
		
		return ResponseEntity.created(uri).body(personSave);
	}
	
	@GetMapping(value = "/{cpf}")
	public ResponseEntity<PersonDTO> findByCPF(@PathVariable String cpf){
		
		PersonDTO findPerson = personService.findPersonByCPF(cpf);
		return ResponseEntity.ok(findPerson);
	}
	
	@GetMapping
	public ResponseEntity<List<PersonDTO>> listAll(){
		List<PersonDTO> persons = personService.listAll();
		return ResponseEntity.ok().body(persons);
	}
	
	@PutMapping("/{cpf}")
	public ResponseEntity<PersonDTO> atualizar(@RequestBody PersonDTO personDTO, @PathVariable String cpf){
		PersonDTO personDTOUpdate = personService.update(personDTO, cpf);
		return ResponseEntity.ok().body(personDTOUpdate);
	}
}
